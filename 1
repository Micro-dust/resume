import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

public class FileCreator {

    public static void main(String[] args) {
        String csvFilePath = "path/to/your/csvfile.csv"; // CSV文件路径
        String outputBasePath = "C:/test"; // 基础目录
        String customString = "YourString"; // 替换*的字符串

        try (BufferedReader br = new BufferedReader(new FileReader(csvFilePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                // 解析CSV中的行
                String[] parts = line.split(",");
                if (parts.length < 4) continue;

                String folderPath = parts[0].trim();
                String fileNamePattern = parts[1].trim();
                int saveDays = Integer.parseInt(parts[2].trim());

                // 创建目标目录
                String targetFolder = outputBasePath + folderPath;
                File folder = new File(targetFolder);
                if (!folder.exists()) {
                    folder.mkdirs();
                }

                // 创建4个文件
                for (int i = 0; i < 4; i++) {
                    createFile(targetFolder, fileNamePattern, saveDays + i - 1, customString);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void createFile(String folderPath, String fileNamePattern, int daysOffset, String customString) {
        try {
            // 计算文件日期
            SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
            Date date = new Date(System.currentTimeMillis() - daysOffset * 24L * 60 * 60 * 1000);
            String dateString = sdf.format(date);

            // 替换文件名中的占位符
            String fileName = fileNamePattern
                .replace("?????????", dateString + getRandomNumbers(9 - dateString.length()))
                .replace("*", customString + dateString);

            // 创建文件
            File file = new File(folderPath + "/" + fileName);
            if (!file.exists()) {
                file.createNewFile();
            }

            // 设置文件的创建时间
            try (FileWriter writer = new FileWriter(file)) {
                writer.write("Generated file\n");
            }

            System.out.println("Created file: " + file.getAbsolutePath());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static String getRandomNumbers(int length) {
        Random random = new Random();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < length; i++) {
            sb.append(random.nextInt(10));
        }
        return sb.toString();
    }
}
