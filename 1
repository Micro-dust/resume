import java.io.*;
import java.nio.file.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class FileCreator {

    public static void main(String[] args) {
        // CSV文件路径
        String csvFilePath = "input.csv"; // 修改为你的CSV文件路径
        String replacementString = "指定字符串"; // * 替换的字符串

        try (BufferedReader br = new BufferedReader(new FileReader(csvFilePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] columns = line.split(",");
                if (columns.length >= 4) {
                    String folderPath = columns[0];
                    String fileNamePattern = columns[1];
                    int saveTime = Integer.parseInt(columns[2]);

                    for (int offset = 0; offset < 4; offset++) {
                        createFile(folderPath, fileNamePattern, saveTime + offset, replacementString);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void createFile(String folderPath, String fileNamePattern, int daysOffset, String replacementString) {
        try {
            // 创建文件夹
            Files.createDirectories(Paths.get(folderPath));

            // 计算文件名中的日期
            LocalDate date = LocalDate.now().minusDays(daysOffset);
            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyyMMdd");
            String dateString = date.format(dateFormatter);

            // 替换问号和星号
            String fileName = fileNamePattern
                    .replace("?????????", dateString + generateRandomDigits(9 - dateString.length()))
                    .replace("*", replacementString);

            // 创建文件
            File file = new File(folderPath, fileName);
            if (file.createNewFile()) {
                System.out.println("Created file: " + file.getAbsolutePath());

                // 设置文件修改时间
                file.setLastModified(System.currentTimeMillis() - (long) daysOffset * 24 * 60 * 60 * 1000);
            } else {
                System.out.println("File already exists: " + file.getAbsolutePath());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static String generateRandomDigits(int count) {
        Random random = new Random();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < count; i++) {
            sb.append(random.nextInt(10)); // 生成0-9的随机数字
        }
        return sb.toString();
    }
}
